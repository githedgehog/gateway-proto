name: CI

concurrency:
  group: ci-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

on:
  push:
    branches:
      - master
      - release/*
    tags:
      - "v*"
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - labeled
      - unlabeled
  schedule:
    - cron: "0 10 * * *" # ~2am PST
  workflow_dispatch:
    inputs:
      debug_enabled:
        type: boolean
        description: "Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)"
        required: false
        default: false

jobs:
  test:
    runs-on: lab

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Just
        uses: extractions/setup-just@v3

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: stable
          cache: true

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: 1.87.0
          components: rustfmt clippy

      - name: Lint and generate code
        run: |
          just --timestamp lint-gha gen lint

      - name: Build everything
        run: |
          just --timestamp build docker-build

      - name: Run tests
        run: |
          just --timestamp test

      - name: Go mod tidy
        run: |
          go mod tidy
          go mod vendor

      # Don't remove it! We shouldn't allow CI to pass if there are any changes not committed after running gen/lint/test
      - name: Fail on dirty
        run: |
          if ! git status --short || ! git diff --quiet; then
            git --no-pager diff -- . :^vendor
            echo "::error::Working directory is dirty. Please run 'just gen lint && go mod tidy && go mod vendor' and commit the changes."
            exit 1
          fi

      - name: Setup tmate session for debug
        if: ${{ failure() && github.event_name == 'workflow_dispatch' && inputs.debug_enabled }}
        uses: mxschmitt/action-tmate@v3
        timeout-minutes: 30
        with:
          limit-access-to-actor: true

  publish:
    runs-on: lab
    if: startsWith(github.event.ref, 'refs/tags/v') && github.event_name == 'push'
    needs:
      - test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Just
        uses: extractions/setup-just@v3

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: stable
          cache: true

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: 1.87.0
          components: rustfmt clippy

      - name: Login to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish Images and Bins on release
        run: |
          just --timestamp oci_repo=ghcr.io push push-multi

      - name: Create GH Release
        uses: softprops/action-gh-release@v2
        with:
          make_latest: true # TODO do it for master only
          files: |
            bin/gwtestctl-*.tar.gz

      # Bump gateway-proto in the gateway repository

      - name: Checkout gateway repository
        uses: actions/checkout@v4
        with:
          repository: githedgehog/gateway
          path: gateway-repo
          persist-credentials: false

      - name: Bump gateway-proto in gateway
        working-directory: gateway-repo
        run: |
          go get go.githedgehog.com/gateway-proto@${{ github.ref_name }}
          go mod tidy && go mod vendor && git add vendor

      - name: Generate token for the gateway repository
        uses: actions/create-github-app-token@v2
        id: gateway-app-token
        with:
          app-id: ${{ secrets.GATEWAY_APP_ID }}
          private-key: ${{ secrets.GATEWAY_PRIVATE_KEY }}
          repositories: |
            gateway

      - name: Create Pull Request for gateway
        uses: peter-evans/create-pull-request@v7
        id: gateway-pr
        with:
          token: ${{ steps.gateway-app-token.outputs.token }}
          path: gateway-repo
          branch: pr/auto/gateway-proto-bump
          commit-message: |
            bump: gateway-proto to ${{ github.ref_name }}

            This is an automated commit created by GitHub Actions workflow,
            in the gateway-proto repository.
          signoff: true
          title: "bump: gateway-proto to ${{ github.ref_name }}"
          body: |
            This is an automated Pull Request created by GitHub Actions workflow,
            in the gateway-proto repository.
